// <auto-generated />
using System;
using Auto_Shop.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Auto_Shop.Infra.Data.Migrations
{
    [DbContext(typeof(AutoShopContext))]
    [Migration("20230328213422_AddedImgLinkToSeedData")]
    partial class AddedImgLinkToSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Auto_Shop.Domain.Models.Brand", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AS_BRANDS");

                    b.HasData(
                        new
                        {
                            Id = "c6774b3e",
                            Description = "Ford Motor Company is an American multinational automobile manufacturer.",
                            ImageUrl = "http://site.com.br",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 162, DateTimeKind.Local).AddTicks(8754),
                            Name = "Ford"
                        },
                        new
                        {
                            Id = "4f2dfd40",
                            Description = "Honda Motor Co., Ltd. is a Japanese public multinational conglomerate manufacturer of automobiles.",
                            ImageUrl = "http://site.com.br",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 162, DateTimeKind.Local).AddTicks(9487),
                            Name = "Honda"
                        },
                        new
                        {
                            Id = "cf61fc5f",
                            Description = "Toyota Motor Corporation is a Japanese multinational automotive manufacturer headquartered in Toyota City, Aichi, Japan.",
                            ImageUrl = "http://site.com.br",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 162, DateTimeKind.Local).AddTicks(9495),
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = "cf6b1d3e",
                            Description = "Fiat Automobiles S.p.A. is an Italian automobile manufacturer, formerly part of Fiat Chrysler Automobiles.",
                            ImageUrl = "http://site.com.br",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 162, DateTimeKind.Local).AddTicks(9499),
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = "7db471fc",
                            Description = "Volkswagen AG, known internationally as the Volkswagen Group, is a German multinational automotive manufacturer.",
                            ImageUrl = "http://site.com.br",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 162, DateTimeKind.Local).AddTicks(9503),
                            Name = "Volkswagen"
                        });
                });

            modelBuilder.Entity("Auto_Shop.Domain.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("AS_ROLES");

                    b.HasData(
                        new
                        {
                            Id = "ec519658",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1637),
                            RoleName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Auto_Shop.Domain.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleId")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AS_USERS");

                    b.HasData(
                        new
                        {
                            Id = "47baf253",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1954),
                            Password = "1AbYhcg*!@3",
                            RoleId = "ec519658",
                            Username = "adm@adm.com"
                        });
                });

            modelBuilder.Entity("Auto_Shop.Domain.Models.Vehicle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BrandId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ImageUrl")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("https://media.discordapp.net/attachments/1050461916474122251/1090388025021833286/image.png");

                    b.Property<string>("Km")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("AS_VEHICLES");

                    b.HasData(
                        new
                        {
                            Id = "eeb7c9d6",
                            BrandId = "c6774b3e",
                            City = "São Paulo",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090383696936312873/Focus_2015.jpg?width=901&height=676",
                            Km = "69.752",
                            Model = "Sedan",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 162, DateTimeKind.Local).AddTicks(9677),
                            Name = "Ford Focus",
                            Price = 62.900m,
                            State = "SP",
                            Year = "2015/2016"
                        },
                        new
                        {
                            Id = "8f75f59e",
                            BrandId = "4f2dfd40",
                            City = "Rio de Janeiro",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090383697338962040/Civic_2020.jpg?width=901&height=676",
                            Km = "54.000",
                            Model = "Sedan",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1300),
                            Name = "Honda Civic",
                            Price = 135.000m,
                            State = "RJ",
                            Year = "2020/2021"
                        },
                        new
                        {
                            Id = "45d5272f",
                            BrandId = "cf61fc5f",
                            City = "Niterói",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090383697737425016/Corolla_2014.jpg?width=901&height=676",
                            Km = "111.040",
                            Model = "Sedan",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1348),
                            Name = "Toyota Corolla",
                            Price = 71.900m,
                            State = "RJ",
                            Year = "2013/2014"
                        },
                        new
                        {
                            Id = "e588d0eb",
                            BrandId = "cf6b1d3e",
                            City = "Santos",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384159035367424/Uno_2015.jpg?width=901&height=676",
                            Km = "82.000",
                            Model = "Hatchback",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1352),
                            Name = "Fiat Uno",
                            Price = 42.990m,
                            State = "SP",
                            Year = "2015/2016"
                        },
                        new
                        {
                            Id = "62fa8fd2",
                            BrandId = "7db471fc",
                            City = "Brasília",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384159349952572/Nivus_2020.jpg?width=901&height=676",
                            Km = "23.652",
                            Model = "Sport Utility",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1357),
                            Name = "Volkswagen Nivus",
                            Price = 121.000m,
                            State = "DF",
                            Year = "2020/2021"
                        },
                        new
                        {
                            Id = "adf55f88",
                            BrandId = "c6774b3e",
                            City = "São Paulo",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384159622574120/Maverick_2022.jpg?width=901&height=676",
                            Km = "28.652",
                            Model = "Pickup",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1394),
                            Name = "Ford Maverick",
                            Price = 241.000m,
                            State = "SP",
                            Year = "2022/2022"
                        },
                        new
                        {
                            Id = "8fff5eb6",
                            BrandId = "c6774b3e",
                            City = "Rio de Janeiro",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384541635579955/Territory_2020.jpg?width=901&height=676",
                            Km = "18.652",
                            Model = "Sport Utility",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1399),
                            Name = "Ford Territory",
                            Price = 150.000m,
                            State = "RJ",
                            Year = "2020/2021"
                        },
                        new
                        {
                            Id = "bc106379",
                            BrandId = "4f2dfd40",
                            City = "Recife",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384541400703126/Hr-v_2017.jpg?width=901&height=676",
                            Km = "44.000",
                            Model = "Sport Utility",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1403),
                            Name = "Honda HR-V",
                            Price = 135.000m,
                            State = "PE",
                            Year = "2017/2018"
                        },
                        new
                        {
                            Id = "3f1f5735",
                            BrandId = "4f2dfd40",
                            City = "Niterói",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384541136453752/City_2019.jpg?width=901&height=676",
                            Km = "52.000",
                            Model = "Sedan",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1407),
                            Name = "Honda City",
                            Price = 91.000m,
                            State = "RJ",
                            Year = "2019/2020"
                        },
                        new
                        {
                            Id = "dfd13430",
                            BrandId = "cf61fc5f",
                            City = "São Gonçalo",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384776600489984/Yaris_2020.jpg?width=901&height=676",
                            Km = "25.000",
                            Model = "Sedan",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1414),
                            Name = "Toyota Yaris",
                            Price = 96.900m,
                            State = "RJ",
                            Year = "2020/2020"
                        },
                        new
                        {
                            Id = "d374ae9d",
                            BrandId = "cf61fc5f",
                            City = "Diadema",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384776856359052/SW4_2017.jpg?width=901&height=676",
                            Km = "71.300",
                            Model = "Sport Utility",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1418),
                            Name = "Toyota Hilux SW4",
                            Price = 315.900m,
                            State = "SP",
                            Year = "2017/2018"
                        },
                        new
                        {
                            Id = "f15ba2cd",
                            BrandId = "cf6b1d3e",
                            City = "Vitória",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384777124778054/Fiat_Bravo_2014.jpg?width=901&height=676",
                            Km = "140.000",
                            Model = "Hatchback",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1422),
                            Name = "Fiat Bravo",
                            Price = 43.700m,
                            State = "ES",
                            Year = "2013/2014"
                        },
                        new
                        {
                            Id = "127cdf6f",
                            BrandId = "cf6b1d3e",
                            City = "Salvador",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384916266627082/Argo_2018.jpg?width=901&height=676",
                            Km = "71.000",
                            Model = "Hatchback",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1426),
                            Name = "Fiat Argo",
                            Price = 51.000m,
                            State = "BA",
                            Year = "2018/2018"
                        },
                        new
                        {
                            Id = "7278eaea",
                            BrandId = "7db471fc",
                            City = "Natal",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384916543455242/Polo_2022.jpg",
                            Km = "5.000",
                            Model = "Hatchback",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1430),
                            Name = "Volkswagen Polo",
                            Price = 108.000m,
                            State = "RN",
                            Year = "2022/2023"
                        },
                        new
                        {
                            Id = "0db3eb7c",
                            BrandId = "7db471fc",
                            City = "Vila Velha",
                            ImageUrl = "https://media.discordapp.net/attachments/1050461916474122251/1090384916744773695/Jetta_2017.jpg?width=901&height=676",
                            Km = "78.652",
                            Model = "Sedan",
                            ModifiedOn = new DateTime(2023, 3, 28, 18, 34, 22, 163, DateTimeKind.Local).AddTicks(1434),
                            Name = "Volkswagen Jetta",
                            Price = 92.000m,
                            State = "ES",
                            Year = "2017/2018"
                        });
                });

            modelBuilder.Entity("Auto_Shop.Domain.Models.Vehicle", b =>
                {
                    b.HasOne("Auto_Shop.Domain.Models.Brand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("BrandId")
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Auto_Shop.Domain.Models.Brand", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
